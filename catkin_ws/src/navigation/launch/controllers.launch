<launch>
    <!-- This launch file launchs the wheel odometry, the encoder and the motor driver -->
	<!-- list of arguments that can be given as inputs of the launch file -->
    <arg name="motor_controller_verbosity"  default="0" />
	<arg name="motion_controller_verbosity" default="0" />
	<arg name="wheel_odom_verbosity"        default="0" />
	<arg name="motor_model_verbosity"       default="1" />

	<arg name="motor_controller_plot"       default="0" />
	<arg name="motion_controller_plot"      default="0" />
	<arg name="wheel_odom_plot"             default="0" />
	
	<arg name="controller_type"             default="2" />

	<!-- START A GROUP WITH A NAMESPACE -->
	<group ns="asc">

		<!-- LAUNCH A "I2C for Motors" NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "i2c_for_motors"
			output = "screen"
			type   = "i2c_for_motors"
			>
			<param name = "motor_driver_verbosity" value = "1" />
			<param name = "motor_driver_current_limit_in_milliamps" value = "5000" />
			<param name = "motor_driver_max_duty_cycle_limit_in_percent" value = "100.0" />
			<param name = "motor_driver_max_accel_limit_in_percent_per_millisecond" value = "0.01" />
			<param name = "motor_driver_max_decel_limit_in_percent_per_millisecond" value = "0.16" />
			<param name = "motor_driver_left_side_multiplier" value = "1" />
			<param name = "motor_driver_right_side_multiplier" value = "1" />
		</node>

		<!-- LAUNCH A "Encoder Read Multi Threaded" NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "encoder_read_multi_threaded"
			output = "screen"
			type   = "encoder_read_multi_threaded"
			>
			<param name = "encoder_read_verbosity" value = "1" />
			<param name = "gpio_chip_number_for_encoder_lines" value = "1" />
			<param name = "should_monitor_left_side_encoder_channel_a" value = "true" />
			<param name = "should_monitor_left_side_encoder_channel_b" value = "false" />
			<param name = "should_monitor_right_side_encoder_channel_a" value = "true" />
			<param name = "should_monitor_right_side_encoder_channel_b" value = "false" />
			<param name = "line_number_for_left_side_encoder_channel_a" value = "105" />
			<param name = "line_number_for_left_side_encoder_channel_b" value = "106" />
			<param name = "line_number_for_right_side_encoder_channel_a" value = "84" />
			<param name = "line_number_for_right_side_encoder_channel_b" value = "130" />
			<!-- NOTE: options for event monitoring are: "rising", "falling", "both" -->
			<param name = "encoder_events_to_monitor" value = "rising" />
			<param name = "delta_t_for_publishing_encoder_counts" value = "0.1" />
		</node>

	</group>

	<!-- Wheel Odometry-->
	<node pkg="navigation"  type="wheel_odometry.py"  name="wheel_odometry"  output="screen">

		<param name = "verbosity" type="int" value = "$(arg wheel_odom_verbosity)" />
		<param name = "plot"      type="int" value = "$(arg wheel_odom_plot)" />
	</node>

	<!-- Motor Model -->
	<node pkg="navigation"  type="motor_model.py"  name="motor_model"  output="screen">

		<param name = "verbosity" value = "1" />
	</node>

	<!-- Twist to DC -->
	<node 
		pkg="navigation"  type="twist_to_duty_cycle.py"  name="twist_to_duty_cycle"  output="screen">

		<param name = "verbosity" value = "0" />
	</node>

	<!-- Motor Controller -->
	<!-- <node 
		pkg="navigation" 
		type="motor_controller.py" 
		name="motor_controller" 
		output="screen">

		<param name = "verbosity" type="int" value = "$(arg motor_controller_verbosity)" />
		<param name = "plot"      type="int" value = "$(arg motor_controller_plot)" />
	</node> -->

	<!-- Motion Controller -->
	<!-- <node 
		pkg="navigation" 
		type="motion_controller.py" 
		name="motion_controller" 
		output="screen">

		<param name = "verbosity" type="int" value = "$(arg motion_controller_verbosity)" />
		<param name = "plot"      type="int" value = "$(arg motion_controller_plot)" />
	</node> -->

	<!-- Task-level Controller -->
	<!-- <node 
		pkg="navigation" 
		type="task_level_controller.py" 
		name="task_level_controller" 
		output="screen">
	</node> -->

</launch>
